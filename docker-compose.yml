networks:
  airflow-network:
    name: airflow-network
    driver: bridge
    
services:
  clickhouse:
    build:
      context: .
      dockerfile: Dockerfile.clickhouse
    container_name: dwh_clickhouse
    environment:
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=default
      - CLICKHOUSE_DB=default
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - airflow-network

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: dwh_postgres
    environment:
      POSTGRES_USER: default
      POSTGRES_PASSWORD: default
      POSTGRES_DB: NorthWind
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U default"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    depends_on:
        postgres:
          condition: service_healthy
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://default:default@postgres/airflow_db
      - AIRFLOW__WEBSERVER__SECRET_KEY=c920c13f55757775c74c3b2328177e60
      - AIRFLOW__CORE__LOGGING_LEVEL=INFO
    volumes:
      - ./logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin
      "
    networks:
      - airflow-network

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    depends_on:
        postgres:
          condition: service_healthy
        airflow-init:
          condition: service_completed_successfully
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://default:default@postgres/airflow_db
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__SECRET_KEY=c920c13f55757775c74c3b2328177e60
      - AIRFLOW__CORE__LOGGING_LEVEL=INFO
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL=10
      - AIRFLOW__CORE__ENABLE_XCOM_PICKLING=True
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8090:8080"
    command: airflow webserver
    networks:
      - airflow-network

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    depends_on:
        postgres:
          condition: service_healthy
        airflow-init:
          condition: service_completed_successfully
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://default:default@postgres/airflow_db
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__SECRET_KEY=c920c13f55757775c74c3b2328177e60
      - AIRFLOW__CORE__LOGGING_LEVEL=INFO
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL=10
      - AIRFLOW__CORE__ENABLE_XCOM_PICKLING=True
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock
    command: airflow scheduler
    networks:
      - airflow-network

  dbt:
    build:
      context: .
      dockerfile: Dockerfile.dbt
    container_name: dwh_dbt
    volumes:
      - ./dbt:/dbt
    networks:
      - airflow-network

volumes:
  postgres_data:
  clickhouse_data: